name: Deploy Secure GPT Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install express cors

      - name: Create Backend Server
        run: |
          echo "const express = require('express');
          const cors = require('cors');
          const fetch = require('node-fetch');
          require('dotenv').config();
          
          const app = express();
          app.use(cors());
          app.use(express.json());

          const apiKey = process.env.OPENAI_API_KEY;

          app.post('/api/chat', async (req, res) => {
            try {
              const response = await fetch('https://api.openai.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${apiKey}`
                },
                body: JSON.stringify({
                  model: 'Tobi',
                  messages: req.body.messages
                })
              });
              const data = await response.json();
              res.json(data);
            } catch (error) {
              res.status(500).json({ error: 'Fehler bei OpenAI Anfrage' });
            }
          });

          app.listen(3000, () => console.log('Server lÃ¤uft auf Port 3000'));" > server.js

      - name: Start Server
        run: node server.js
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
